{
  "unpublishedCollection": {
    "name": "themesObj",
    "pageId": "DApps",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\tonAppChange: () => {\n\t\tstoreValue('dapp_slug', dapps_selector.selectedOptionValue); \n\t\tthemesObj.initThemes(); \n\t}, \n\tonThemeClick: (modalToOpen) => {\n//\t\tstoreValue('selected_themeId', selectedTheme.th_id); \n\t\tlist_theme.run(); \n\t\tshowModal(modalToOpen); \n\t}, \n\tcloseModalTheme: (modalToClose) => {\n\t\tcloseModal(modalToClose);  \n\t}, \n\tdefaultText: (prop, isArray=false) => {\n\t\treturn theme_dapps?.selectedItem?.th_id ? ( list_theme?.data[prop]): (isArray ? []: ''); \n\t}, \n\tjoinArrays: (inp) => {\n\t\tif(inp.trim() == ''){\n\t\t\treturn ''; \n\t\t}else{\n\t\t\treturn '\"' + inp + '\"'; \n\t\t}\n\t}, \n\tgetCreateThemeData: () => {\n\t\tlet icon = modal_ct_iicon.text; \n\t\tlet name = modal_ct_iname.text; \n\t\tlet desc = modal_ct_idesc.text; \n\t\tlet categories = modal_ct_icat.text.split(\",\").map((item) => item.trim(\" \").replace(/^\"|\"$/g, \"\")); \n\t\tlet slug = modal_ct_islug.text; \n\t\tlet items = modal_ct_iitems.text.split(\",\").map((item) => ({value: item.trim(\" \").replace(/^\"|\"$/g, \"\")}));\n\t\treturn {\n\t\t\ticon: icon, name: name, description: desc, categories: categories, slug: slug, items: items\n\t\t}\n\t},\n\t\tgetUpdateThemeData: () => {\n\t\t\tlet icon = modal_ut_iicon.text; \n\t\t\tlet name = modal_ut_iname.text; \n\t\t\tlet desc = modal_ut_idesc.text; \n\t\t\tlet categories = modal_ut_icat.text.split(\",\").map((item) => item.trim(\" \").replace(/^\"|\"$/g, \"\")); \n\t\t\tlet items = modal_ut_iitems.text.split(\",\").map((item) => ({value: item.trim(\" \").replace(/^\"|\"$/g, \"\")}));\n\t\t\treturn {\n\t\t\t\ticon: icon, name: name, description: desc, categories: categories, items: items\n\t\t\t}; \n\t\t/*\n\t\tshowAlert(`Icon: ${icon}`, 'info'); \n\t\tshowAlert(`Name: ${name}`); \n\t\tshowAlert(`Description: ${desc}`); \n\t\tshowAlert(`Categories: ${categories}`); \n\t\tshowAlert(`Slug: ${slug}`); \n\t\tshowAlert(`Items: ${JSON.stringify(items)}`); \n\t\t*/\n\t}, \n\tonCreateSuccess: () => {\n\t\tshowAlert('Successfully created!', 'success'); \n\t\tthemesObj.closeModalTheme('modal_create_theme'); \n\t\tlist_themes.run(); \n\t},\n\tonCreateError: () => {\n\t\tshowAlert(createTheme.data.error.join(', '),'error'); \n\t}, \n\tinitThemes: async () => {\n\t\tlet themes = []; \n\t\tlet page = 1; \n\t\tdo{\n\t\t\tawait list_themes.run({page}); \n\t\t\tthemes = [...themes, ...list_themes.data.results]; \n\t\t\tpage++; \n\t\t}while(list_themes.data.next != null); \n\t\tstoreValue('themes', themes); \n\t}\n}",
    "variables": []
  },
  "id": "DApps_themesObj",
  "deleted": false,
  "gitSyncId": "609a44765864501cc39c4071_6204ce48552a5f6395877869"
}